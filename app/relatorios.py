import os
from datetime import datetime
from app.config import GRAPHS_DIR, DATA_DIR
from app.main import consolidar_dados_mensais
from app.graficos import (
    gerar_grafico_item_catalogo_anual,
    gerar_grafico_chamados_por_hora,
    gerar_grafico_chamados_por_dia,
    gerar_grafico_clientes_frequentes,
    gerar_todos_os_graficos_chamados_por_hora,
    gerar_grafico_chamados_por_mes,
    gerar_grafico_total_por_mes
)

def gerar_relatorios_consolidados():
    """
    Gera todos os relat√≥rios e gr√°ficos automaticamente, incluindo:
    - Gr√°ficos individuais por m√™s
    - Gr√°ficos consolidados (total)
    - Gr√°ficos comparativos
    """
    try:
        # 1. Configura√ß√£o inicial
        os.makedirs(GRAPHS_DIR, exist_ok=True)
        print(f"[{datetime.now().strftime('%d/%m/%Y %H:%M:%S')}] Iniciando gera√ß√£o de relat√≥rios...")

        # 2. Consolida dados de todos os arquivos
        df_total = consolidar_dados_mensais(DATA_DIR)
        
        # Adiciona coluna de m√™s padronizada (ex: "Janeiro")
        df_total['Mes'] = df_total['Iniciado em'].dt.strftime('%B').str.capitalize()
        
        total_registros = len(df_total)
        meses = df_total['Mes'].unique()
        print(f"‚úÖ Dados consolidados: {total_registros} registros em {len(meses)} meses ({', '.join(meses)})")

        # 3. Gera√ß√£o de gr√°ficos
        print("\nüî® Gerando gr√°ficos:")
        
        # Gr√°fico NOVO - Total por m√™s
        gerar_grafico_total_por_mes(df_total)
        print("  ‚úÖ Total de chamados por m√™s")

        # Itens do cat√°logo
        gerar_grafico_item_catalogo_anual(df_total)
        print("  ‚úÖ Itens do cat√°logo (por m√™s e total)")

        # Chamados por hora
        gerar_grafico_chamados_por_hora(df_total)  # Total
        gerar_todos_os_graficos_chamados_por_hora(df_total)  # Mensal + comparativo
        print("  ‚úÖ Chamados por hora (individual e comparativo)")

        # Chamados por dia
        gerar_grafico_chamados_por_dia(df_total)
        print("  ‚úÖ Chamados por dia da semana")

        # Clientes frequentes
        gerar_grafico_clientes_frequentes(df_total)
        print("  ‚úÖ Clientes mais frequentes")

        # Evolu√ß√£o mensal
        gerar_grafico_chamados_por_mes(df_total)
        print("  ‚úÖ Evolu√ß√£o mensal de chamados")

        # 4. Finaliza√ß√£o
        print(f"\n‚úÖ Relat√≥rios gerados com sucesso em: {GRAPHS_DIR}")
        return True

    except Exception as e:
        print(f"\n‚ùå Erro ao gerar relat√≥rios: {str(e)}")
        raise